"use strict";window.addEventListener("DOMContentLoaded",function(){if(document.querySelector("header")){var e=function(){300<window.scrollY&&"/"===window.location.pathname&&!window.location.search?t.setAttribute("style","background:black;box-shadow:0 0 10px black"):window.location.search?t.setAttribute("style","background:black;box-shadow:0 0 10px black"):t.setAttribute("style","background:transparent;box-shadow:0 0 10px transparent")},t=document.querySelector("header");window.location.search&&t.setAttribute("style","background:black;box-shadow:0 0 10px black"),"/"!=window.location.pathname?(window.removeEventListener("scroll",e),t.setAttribute("style","background:black;box-shadow:0 0 10px black")):window.addEventListener("scroll",e,!1)}}),document.querySelector(".hero-scroll-down")&&document.querySelector(".hero-scroll-down").addEventListener("click",function(){window.scrollBy({top:window.innerHeight-100,left:0,behavior:"smooth"})}),window.addEventListener("DOMContentLoaded",function(){if(document.querySelector("#login-modal-trigger")){var t=function(){var e=r.value,t=i.value;if(u.setAttribute("disabled",!0),l.textContent="",r.value.trim()&&i.value.trim()){var o=JSON.stringify({name:e,password:t});fetch("/login",{method:"POST",headers:{"Content-Type":"application/json"},body:o}).then(function(e){return e.json()}).then(function(e){u.setAttribute("disabled",!1),r.value="",i.value="",e.error?l.textContent="The username or password provided is incorrect":window.location.href="/"}).catch(function(e){console.log(e)})}else e.trim()?t.trim()||(a.textContent="*Password field is empty!"):c.textContent="*Username field is empty!"},e=function(){o.classList.toggle("modal-active"),n.classList.toggle("wrapper-active")},o=document.querySelector("#login-modal"),n=document.querySelector("#login-modal-wrapper.--wrapper"),r=document.querySelector("#login-modal--username"),c=document.querySelector("#login-modal--username-error"),i=document.querySelector("#login-modal--password"),a=document.querySelector("#login-modal--password-error"),l=document.querySelector("#login-modal--login-error"),d=document.querySelector("#login-modal--button"),s=document.querySelector("#login-modal-trigger"),u=document.querySelector(".modal--close-btn");o.addEventListener("click",function(e){return e.stopPropagation()}),s.addEventListener("click",e),u.addEventListener("click",e),n.addEventListener("click",e),d.addEventListener("click",t),n.classList.contains("wrapper-active")?window.addEventListener("keydown",function(e){e.stopPropagation(),13===e.keyCode&&d.addEventListener("click",t)}):window.removeListener("keydown",function(e){e.stopPropagation(),13===e.keyCode&&d.addEventListener("click",t)})}}),function(){var i=!0;window.addEventListener("DOMContentLoaded",function(){if(document.querySelector("#articles")){var o=function(e){i&&(c.textContent=e.length,i=!1),e.length?(e.forEach(function(e){r.innerHTML+='\n                    <div class="article-item">\n                            <p id="article-title">'.concat(e.title,'</p>\n                            <p id="article-description">').concat(e.description,'</p>\n                            <p id="article-published-date">').concat(e.publishedDate,'</p>\n                            <p id="article-author">You</p>\n                            <div class="stylish-row-group">\n                                <a href="/dashboard/editor"><div class="stylish-tag">EDIT</div></a>\n                                <div id="delete-article" data-article-id=').concat(e._id,' class="stylish-tag" style="background-color: #E91E63!important;">DELETE</div>\n                            </div>\n                </div>\n                    ')}),t()):(r.innerHTML+='\n                    <div class="article-item">\n                            <p id="article-title">No post found</p>\n                </div>',l.classList.remove("wrapper-active"))},t=function(){function t(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;o.classList.toggle("modal-active"),n.classList.toggle("wrapper-active"),e&&(console.log("Deleting",i),a(e,function(e){i="",alert(e),window.location.reload()}))}l.classList.remove("wrapper-active");var o=document.querySelector("#alert-modal"),n=document.querySelector("#alert-modal-wrapper.--wrapper"),e=document.querySelector("#alert-modal--closeBtn"),r=document.querySelector("#alert-modal-yes"),c=document.querySelector("#alert-modal-no"),i=(e=document.querySelector("#alert-modal--closeBtn"),"");o.addEventListener("click",function(e){return e.stopPropagation()}),e.addEventListener("click",t),n.addEventListener("click",t),c.addEventListener("click",t),r.addEventListener("click",function(){t(i)}),setTimeout(function(){Array.from(document.querySelectorAll("#delete-article")).forEach(function(e){return e.onclick=function(e){i=e.target.dataset.articleId,console.log("Triggering modal",i),t()}})},0)},n=function(e,t){fetch("/search?q=".concat(e)).then(function(e){return e.json()}).then(function(e){t(e.results)}).catch(function(e){return console.log(e)})},a=function(e,t){fetch("/api/article/delete/".concat(e)).then(function(e){return e.json()}).then(function(e){t(e.message)}).catch(function(e){return console.log(e)})},e=document.querySelector("input#dashboard-search"),r=document.querySelector("#articles"),l=document.querySelector("#loader-wrapper"),c=document.querySelector("#article-count");n("",o),e.onkeyup=function(e){l.classList.add("wrapper-active"),r.innerHTML="";var t=e.target.value;n(t,o)}}})}()(function(){if(document.querySelector(".sidebar")){var t=document.querySelector(".sidebar"),o=document.querySelector("#sidebar-wrapper.--wrapper");if(document.querySelector(".sidebar--trigger")){var e=function(e){e.stopPropagation(),t.classList.toggle("sidebar-active"),o.classList.toggle("wrapper-active")};document.querySelector(".sidebar--trigger").addEventListener("click",e),o.addEventListener("click",e)}}})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
